<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:chromeTabs="clr-namespace:ChromeTabs;assembly=ChromeTabs"
                    xmlns:converters="clr-namespace:ChromeTabs.Converters;assembly=ChromeTabs"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:Properties="clr-namespace:ProjektKatastrophenschutz.Properties"
                    xmlns:converters1="clr-namespace:ProjektKatastrophenschutz.Converters">

    <converters:IsLessThanConverter x:Key="IsLessThanConverter" />
    <converters1:ColorToSolidColorBrushValueConverter x:Key="ColorConverter"/>
    <converters:TabPersistBehaviorToContentPresenterVisibilityConverter x:Key="TabPersistBehaviorToContentPresenterVisibilityConverter" />
    <converters:TabPersistBehaviorToItemHolderVisibilityConverter x:Key="TabPersistBehaviorToItemHolderVisibilityConverter" />

    <SolidColorBrush x:Key="TabStrokeBrush">#FF999999</SolidColorBrush>
    <SolidColorBrush x:Key="SelectedTabStrokeBrush">WhiteSmoke</SolidColorBrush>
    <SolidColorBrush x:Key="TabHighlightBrush">Transparent</SolidColorBrush>
    <SolidColorBrush x:Key="SelectedTabHighlighBrush">#151515</SolidColorBrush>
    <system:Double x:Key="MinTabWidthToShowCloseButton">60</system:Double>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <Canvas x:Name="CloseButton" Background="Transparent" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Line x:Name="CloseElement1" X1="0" Y1="0" X2="10" Y2="10" Stroke="{TemplateBinding Foreground}" StrokeThickness="1"/>
                            <Line x:Name="CloseElement2" X1="0" Y1="10" X2="10" Y2="0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1"/>
                            <Rectangle x:Name="CloseElement3" Canvas.Top="4" Canvas.Left="4" Fill="{TemplateBinding Foreground}" Height="2" Width="2"/>
                        </Canvas>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CloseElement1" Property="Stroke" Value="#FE1C1C"/>
                            <Setter TargetName="CloseElement2" Property="Stroke" Value="#FE1C1C"/>
                            <Setter TargetName="CloseElement3" Property="Fill" Value="#FE1C1C"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Mdl2TabItemStyle" TargetType="{x:Type chromeTabs:ChromeTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chromeTabs:ChromeTabItem}">
                    <Grid x:Name="RootGrid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="9" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        
                        <Grid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Close"
                                          Command="{Binding CloseTabCommand, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <MenuItem Header="Close all"
                                          Command="{Binding CloseAllTabsCommand, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                <MenuItem Header="Close other tabs"
                                          Command="{Binding CloseOtherTabsCommand, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          CommandParameter="{Binding}" />
                            </ContextMenu>
                        </Grid.ContextMenu>

                        <Rectangle x:Name="TabFill1" Grid.ColumnSpan="2" Fill="Transparent" Stretch="Fill" RadiusX="2" RadiusY="2" VerticalAlignment="Top" Height="4"/>
                        <Rectangle x:Name="TabFill2" Grid.Column="0" Grid.ColumnSpan="2" Fill="Transparent" Stretch="Fill" Margin="0 2 0 0"/>
                        
                        <ContentPresenter x:Name="ContentSite"
                                          Grid.Column="1"
                                          Margin="0 0 32 0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          ContentSource="Header"/>

                        <Button x:Name="CloseButton"
                                Grid.Column="1"
                                Background="{Binding Fill, ElementName=TabFill}"
                                Command="{Binding CloseTabCommand, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                HorizontalAlignment="Right"
                                Height="32"
                                KeyboardNavigation.IsTabStop="False"
                                Style="{StaticResource CloseButtonStyle}"
                                Width="32"
                                Visibility="Collapsed"/>

                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--This trigger hides the close button on each tab that is shrunk to below a minimum width-->
                        <DataTrigger
                            Binding="{Binding Path=ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource IsLessThanConverter}, ConverterParameter={StaticResource MinTabWidthToShowCloseButton}}"
                            Value="True">
                            <Setter Property="Button.Visibility"
                                    TargetName="CloseButton"
                                    Value="Collapsed" />
                        </DataTrigger>
                        
                        <!--This trigger shows the close button on every tab that is selected, unless it is pinned-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPinned"
                                           Value="False" />
                                <Condition Property="IsSelected"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CloseButton"
                                    Property="Visibility"
                                    Value="Visible" />
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CloseButton"
                                    Property="Visibility"
                                    Value="Visible" />
                        </MultiTrigger>

                        <!--This trigger hides the close button on pinned tabs-->
                        <Trigger Property="IsPinned"
                                 Value="True">
                            <Setter TargetName="CloseButton"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter TargetName="ContentSite"
                                    Property="Margin"
                                    Value="0 0 9 0" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="TabFill1" Property="Fill" Value="{Binding Source={x:Static Properties:Settings.Default}, Path=SelectedColorTheme.TabBarTabMouseoverBackground}"/>
                            <Setter TargetName="TabFill2" Property="Fill" Value="{Binding Source={x:Static Properties:Settings.Default}, Path=SelectedColorTheme.TabBarTabMouseoverBackground}"/>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TabFill1" Property="Fill" Value="{Binding Source={x:Static Properties:Settings.Default}, Path=SelectedColorTheme.TabBarTabSelectedBackground}" />
                            <Setter TargetName="TabFill2" Property="Fill" Value="{Binding Source={x:Static Properties:Settings.Default}, Path=SelectedColorTheme.TabBarTabSelectedBackground}" />
                            <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{Binding Source={x:Static Properties:Settings.Default}, Path=SelectedColorTheme.TabBarTabSelectedText}" />
                            <Setter TargetName="CloseButton" Property="Foreground" Value="{Binding Source={x:Static Properties:Settings.Default}, Path=SelectedColorTheme.TabBarTabSelectedText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="chromeTabs:ChromeTabControl">
        <Setter Property="Background" Value="{Binding Source={x:Static Properties:Settings.Default}, Path=SelectedColorTheme.TabBarTabNotSelectedBackground}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{Binding Source={x:Static Properties:Settings.Default}, Path=SelectedColorTheme.TabBarTabNotSelectedText}"/>
        <Setter Property="TabOverlap" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource Mdl2TabItemStyle}" />
        <Setter Property="PinnedTabWidth" Value="222"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type chromeTabs:ChromeTabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <chromeTabs:ChromeTabPanel Background="{TemplateBinding Background}" IsItemsHost="True" HorizontalAlignment="Left" Margin="20 0 0 0"/>
                        <Grid Grid.Row="1"
                              Visibility="{TemplateBinding TabPersistBehavior,Converter={StaticResource TabPersistBehaviorToContentPresenterVisibilityConverter}}">
                            <ContentPresenter Content="{TemplateBinding SelectedContent}" />
                        </Grid>
                        <Grid x:Name="PART_ItemsHolder"
                              Grid.Row="1"
                              Visibility="{TemplateBinding TabPersistBehavior,Converter={StaticResource TabPersistBehaviorToItemHolderVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>