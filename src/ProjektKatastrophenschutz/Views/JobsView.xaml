<UserControl x:Class="ProjektKatastrophenschutz.Views.JobsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             xmlns:controls="clr-namespace:ProjektKatastrophenschutz.Controls"
             xmlns:controls1="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:converters="clr-namespace:ProjektKatastrophenschutz.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:properties="clr-namespace:ProjektKatastrophenschutz.Properties"
             xmlns:views="clr-namespace:ProjektKatastrophenschutz.Views"
             xmlns:vm="clr-namespace:ProjektKatastrophenschutz.ViewModels"
             d:DesignHeight="500"
             d:DesignWidth="800"
             Background="White"
             DataContext="{Binding Source={StaticResource Locator},
                                   Path=Jobs}"
             Loaded="JobsView_OnLoaded"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="DefaultCalendar" TargetType="Calendar">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <StackPanel Name="PART_Root" HorizontalAlignment="Center">
                            <CalendarItem Name="PART_CalendarItem"
                                          Background="{TemplateBinding Control.Background}"
                                          BorderBrush="{TemplateBinding Control.BorderBrush}"
                                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                                          Style="{TemplateBinding Calendar.CalendarItemStyle}" />
                            <Button Command="vm:CalendarCommands.ResetDate"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    Content="Zurücksetzen" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DefaultDatePicker" TargetType="{x:Type DatePicker}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="CalendarStyle" Value="{StaticResource DefaultCalendar}" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <converters:JobTypeToLocalizedStringConverter x:Key="JobTypeToLocalizedStringConverter" />
        <converters:JobStateConverter x:Key="JobStateConverter" />
        <converters:JobPriorityConverter x:Key="JobPriorityConverter" />
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid Height="Auto"
              Background="#F8E074"
              Visibility="{Binding CurrentFilterText,
                                   Converter={StaticResource StringToVisibilityConverter}}">
            <TextBlock Margin="20 8"
                       VerticalAlignment="Center"
                       Text="{Binding CurrentFilterText}" />
            <Button HorizontalAlignment="Right"
                    Command="{Binding ResetFilterCommand}"
                    Content="Alle Aufträge anzeigen"
                    Padding="20 8"
                    Style="{StaticResource OverlayLightButtonStyle}" />
        </Grid>

        <TextBlock Grid.Row="1"
                   Margin="26 20"
                   FontSize="20"
                   SnapsToDevicePixels="True"
                   Text="Auftragsübersicht" />
        <!--<TextBlock x:Name="RemoveAllFiltersTextBlock"
                   Grid.Row="1"
                   Width="128"
                   Margin="0,35,165,35"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Center"
                   Cursor="Hand"
                   Foreground="#00B294"
                   Text="Alle Filter zurücksetzen">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding RemoveAllFiltersCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBlock>-->
        <TextBlock x:Name="CreateDummyDataTextBlock"
                   Grid.Row="1"
                   Margin="20"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Center"
                   Cursor="Hand"
                   Foreground="#00B294"
                   MouseLeftButtonUp="CreateDummyDataTextBlock_MouseLeftButtonUp"
                   Text="Dummydaten erzeugen"
                   Visibility="Collapsed"/>
        <!--<Button x:Name="ToggleButton3" Grid.Row="0"
                Width="122"
                Margin="474,14,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                BorderBrush="Transparent"
                Command="{Binding FilterByEndedCommand}"
                Content="Beendet">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightGray" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding StateFilterValue}" Value="Closed">
                            <Setter Property="Background" Value="GreenYellow" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="ToggleButton2" Grid.Row="0"
                Width="122"
                Margin="347,14,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                BorderBrush="Transparent"
                Command="{Binding FilterByInProgressCommand}"
                Content="In Bearbeitung">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightGray" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding StateFilterValue}" Value="InEdit">
                            <Setter Property="Background" Value="GreenYellow" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="ToggleButton1" Grid.Row="0"
                Width="122"
                Margin="220,14,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                BorderBrush="Transparent"
                Command="{Binding FilterByOpenCommand}"
                Content="Neu erstellt">
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="LightGray" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding StateFilterValue}" Value="NewCreated">
                            <Setter Property="Background" Value="GreenYellow" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>-->

        <StackPanel x:Name="FilterBar"
                    Grid.Row="1"
                    Margin="0,60,0,0"
                    Visibility ="{Binding Source={x:Static properties:Settings.Default}, Path=ShowJobsViewFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid>
                <!--<Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding ElementName=JobDataGrid, Path=Columns[0].ActualWidth}" />
                    <ColumnDefinition Width="{Binding ElementName=JobDataGrid, Path=Columns[1].ActualWidth}" />
                    <ColumnDefinition Width="{Binding ElementName=JobDataGrid, Path=Columns[2].ActualWidth}" />
                    <ColumnDefinition Width="{Binding ElementName=JobDataGrid, Path=Columns[3].ActualWidth}" />
                    <ColumnDefinition Width="{Binding ElementName=JobDataGrid, Path=Columns[4].ActualWidth}" />
                </Grid.ColumnDefinitions>

                <vm:NullItemSelectorAdapter Grid.Column="0" ItemsSource="{Binding JobPriorities}">
                    <ComboBox SelectedItem="{Binding PriorityFilterValue}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource JobPriorityConverter}}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding PriorityFilterCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ComboBox>
                </vm:NullItemSelectorAdapter>

                <TextBox Grid.Column="1"
                         controls1:TextBoxHelper.ClearTextButton="True"
                         controls1:TextBoxHelper.Watermark="Filtern..."
                         Text="{Binding TypeFilterValue,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="NoWrap">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding TypeFilterChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>

                <TextBox Grid.Column="2"
                         controls1:TextBoxHelper.ClearTextButton="True"
                         controls1:TextBoxHelper.Watermark="Filtern..."
                         Text="{Binding AddressFilterText,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="NoWrap">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding AddressFilterChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>

                <DatePicker Grid.Column="3"
                            SelectedDate="{Binding DateFilterValue}"
                            Style="{StaticResource DefaultDatePicker}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectedDateChanged">
                            <i:InvokeCommandAction Command="{Binding DateFilterCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <DatePicker.Resources>
                        <Style TargetType="{x:Type DatePickerTextBox}">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Grid>
                                            <!--<Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="150" />
                                            -->
                                            <!--<ColumnDefinition Width="15*" />-->
                                            <!--
                                            </Grid.ColumnDefinitions>-->
                                            <TextBox x:Name="PART_TextBox"
                                                     VerticalAlignment="Top"
                                                     controls1:TextBoxHelper.ClearTextButton="True"
                                                     controls1:TextBoxHelper.Watermark="Datum wählen..."
                                                     Text="{Binding SelectedDate,
                                                                    RelativeSource={RelativeSource AncestorType={x:Type DatePicker}},
                                                                    Converter={StaticResource EmptyStringToNullConverter},
                                                                    Mode=TwoWay,
                                                                    StringFormat=d,
                                                                    UpdateSourceTrigger=PropertyChanged}" />
                                            <!--<Button x:Name="ResetButton"
                                                    Grid.Column="1"
                                                    VerticalAlignment="Top"
                                                    BorderBrush="Transparent"
                                                    BorderThickness="0"
                                                    Command="{Binding ResetDateFilterCommand}">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <Image Width="{Binding ElementName=ResetButton,
                                                                               Path=ActualWidth,
                                                                               Converter={StaticResource DimensionConverter},
                                                                               ConverterParameter=1}"
                                                               RenderOptions.BitmapScalingMode="HighQuality"
                                                               Source="/Resources/Images/Icons/DeleteButton.png" />
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>-->
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DatePicker.Resources>
                </DatePicker>

                <TextBox Grid.Column="4"
                         controls1:TextBoxHelper.ClearTextButton="True"
                         controls1:TextBoxHelper.Watermark="Filtern..."
                         Text="{Binding DescriptionFilterText,
                                        Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="NoWrap">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding DescriptionFilterChangedCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </TextBox>
            </Grid>
        </StackPanel>

        <DataGrid x:Name="JobDataGrid"
                  Grid.Row="2"
                  Margin="0 0 -1 0"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  ItemsSource="{Binding JobsView}"
                  Loaded="JobDataGrid_OnLoaded"
                  MouseDoubleClick="DummyJobDataGrid_OnMouseDoubleClick"
                  MouseRightButtonDown="DummyJobDataGrid_OnMouseRightButtonDown"
                  SelectedItem="{Binding SelectedJob}"
                  SelectionMode="Extended"
                  SelectionUnit="FullRow">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=SelectedColorTheme.DataGridItemSelectedBackground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding Source={x:Static properties:Settings.Default}, Path=SelectedColorTheme.DataGridItemMouseoverBackground}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <command:EventToCommand Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=JobDataGrid}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.Columns>
                <!--<DataGridTextColumn Header="Nummer" Binding="{Binding Identifier}"/>-->
                <DataGridTextColumn Binding="{Binding JobPriority, Converter={StaticResource JobPriorityConverter}}" Header="Priorität" />
                <DataGridTextColumn Width="100"
                                    Binding="{Binding JobType}"
                                    Header="Typ" />
                <DataGridTemplateColumn Width="250" Header="Adresse">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Location.Street}" />
                                <TextBlock Text=" " />
                                <TextBlock Text="{Binding Location.HouseNumber}" />
                                <TextBlock Text=" " />
                                <TextBlock Text="{Binding Location.ZipCode}" />
                                <TextBlock Text=" " />
                                <TextBlock Text="{Binding Location.City}" />
                                <TextBlock Text=" " />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Width="150"
                                    Binding="{Binding Date}"
                                    Header="Erstellt am" />
                <DataGridTextColumn Width="*"
                                    Binding="{Binding Description}"
                                    Header="Beschreibung" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
